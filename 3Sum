# Problems-on-Arrays-Leetcode
# Problem 15
# 3Sum

class Solution 
{
    public List<List<Integer>> threeSum(int[] nums) 
    {
        Arrays.sort(nums);
        List<List<Integer>> result = new ArrayList<>();
        int n = nums.length;
        for(int i=0;i<n-2;i++)
        {
            if(nums[i]>0)
            {
                break;
            }
            if(i>0 && nums[i]==nums[i-1])
            {
                continue;
            }
            int left = i+1;
            int right = n-1;
            int target = 0-nums[i];
            while(left<right)
            {
                int TempSum = nums[left]+nums[right];
                if(target==TempSum)
                {
                    result.add(Arrays.asList(new Integer[]{nums[i],nums[left],nums[right]}));
                    left++;
                    
                    while(left<right && nums[left]==nums[left-1])
                    {
                        left++;
                        
                    }
                    right--;
                    while(left<right && nums[right]==nums[right+1])
                    {
                        right--;
                    }
                }
                else if(target>TempSum)
                {
                    left++;
                }
                else if(target<TempSum)
                {
                    right--;
                }
            }
         }
        return result;
    }
}

